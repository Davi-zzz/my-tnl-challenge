
version: '3'

networks:
  laravel:
    name: laravel
    external: true
    driver: bridge

services:
  nginx_api: 
    image: nginx:stable-alpine
    container_name: nginx_api
    ports: 
      - "8081:80"
      - "8082:443"
    expose: 
      - "80"
      - "443"
    volumes:
      - ./api:/var/www/html/api/
      - ./web:/var/www/html/web/
      - ./nginx/api/default.conf:/etc/nginx/conf/default.conf
      - ./nginx/web/default.conf:/etc/nginx/default.conf
    depends_on:
      - php_front
      - php_back
      - mysql
    networks:
      - laravel

  mysql:
    image: mysql:5.7.29
    container_name: mysql_laravel
    restart: unless-stopped
    tty: true
    ports: 
      - "9306:3306"
    environment: 
      MYSQL_DATABASE: laravel_db
      MYSQL_USER: laravel_db
      MYSQL_PASSWORD: 123456789
      MYSQL_ROOT_PASSWORD: 123456789
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks: 
      - laravel
    volumes: 
      - ./mysql:/var/lib/mysql

  php_front:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: php_front
    volumes: 
      - ./web:/var/www/web
    ports: 
      - "9000:9000"
    networks: 
      - laravel
  
  php_back:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: php_back
    volumes: 
      - ./api:/var/www/api
    ports: 
      - "9001:9000"
    networks: 
      - laravel
  
  composer_api:
    image: composer:latest
    container_name: composer_api
    volumes: 
      - ./api:/var/www/api
    working_dir: /var/www/api
    depends_on: 
      - php_back
    networks: 
      - laravel
  
  npm_api: 
    image: node:13.7
    container_name: npm_api
    volumes: 
      - ./api:/var/www/api
    working_dir: /var/www/api
    entrypoint: ['npm']

  artisan_api:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: artisan_api
    volumes: 
      - ./api:/var/www/api
    depends_on: 
      - mysql
    working_dir: /var/www/api
    command: 'migrate:fresh --seed'
    entrypoint: ['php', '/var/www/api/artisan']
    networks: 
      - laravel
  
  composer_web:
    image: composer:latest
    container_name: composer_web
    volumes: 
      - ./web:/var/www/web
    working_dir: /var/www/web
    depends_on: 
      - php_front
    networks: 
      - laravel

  artisan_web:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: artisan_web
    volumes: 
      - ./web:/var/www/web
    working_dir: /var/www/web
    entrypoint: ['php', '/var/www/web/artisan']
    networks: 
      - laravel

